{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { alert } from './iziToast.js';\n\nlet selectedDateMs;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] - Date.now() < 0) {\n      startBtn.disabled = true;\n      return alert();\n    }\n    selectedDateMs = selectedDates[0];\n    startBtn.disabled = false;\n  },\n};\n\nflatpickr('#datetime-picker', options);\ndocument.addEventListener('DOMContentLoaded', () => (startBtn.disabled = true));\nconst inputPicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nstartBtn.addEventListener('click', () => {\n  start();\n  startBtn.disabled = true;\n  inputPicker.disabled = true;\n});\n\nfunction start() {\n  tick(selectedDateMs - Date.now());\n  const intervalId = setInterval(() => {\n    const diff = selectedDateMs - Date.now();\n    tick(diff);\n    if (diff <= 1000) {\n      clearInterval(intervalId);\n      inputPicker.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction tick(ms) {\n  const convertDate = convertMs(ms);\n  daysSpan.textContent = convertDate.days;\n  hoursSpan.textContent = convertDate.hours;\n  minutesSpan.textContent = convertDate.minutes;\n  secondsSpan.textContent = convertDate.seconds;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: addLeadingZero(Math.floor(ms / day)),\n    hours: addLeadingZero(Math.floor((ms % day) / hour)),\n    minutes: addLeadingZero(Math.floor(((ms % day) % hour) / minute)),\n    seconds: addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    ),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}\n"],"names":["selectedDateMs","options","selectedDates","startBtn","alert","flatpickr","inputPicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","start","tick","intervalId","diff","ms","convertDate","convertMs","addLeadingZero","value"],"mappings":"kGAIA,IAAIA,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAK,EAClC,OAAAC,EAAS,SAAW,GACbC,EAAK,EAEdJ,EAAiBE,EAAc,CAAC,EAChCC,EAAS,SAAW,EACrB,CACH,EAEAE,EAAU,mBAAoBJ,CAAO,EACrC,SAAS,iBAAiB,mBAAoB,IAAOE,EAAS,SAAW,EAAK,EAC9E,MAAMG,EAAc,SAAS,cAAc,kBAAkB,EACvDH,EAAW,SAAS,cAAc,cAAc,EAChDI,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DP,EAAS,iBAAiB,QAAS,IAAM,CACvCQ,IACAR,EAAS,SAAW,GACpBG,EAAY,SAAW,EACzB,CAAC,EAED,SAASK,GAAQ,CACfC,EAAKZ,EAAiB,KAAK,IAAK,CAAA,EAChC,MAAMa,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOd,EAAiB,KAAK,IAAG,EACtCY,EAAKE,CAAI,EACLA,GAAQ,MACV,cAAcD,CAAU,EACxBP,EAAY,SAAW,GAE1B,EAAE,GAAI,CACT,CAEA,SAASM,EAAKG,EAAI,CAChB,MAAMC,EAAcC,EAAUF,CAAE,EAChCR,EAAS,YAAcS,EAAY,KACnCR,EAAU,YAAcQ,EAAY,MACpCP,EAAY,YAAcO,EAAY,QACtCN,EAAY,YAAcM,EAAY,OACxC,CAEA,SAASC,EAAUF,EAAI,CAMrB,MAAO,CACL,KAAMG,EAAe,KAAK,MAAMH,EAAK,KAAG,CAAC,EACzC,MAAOG,EAAe,KAAK,MAAOH,EAAK,MAAO,IAAI,CAAC,EACnD,QAASG,EAAe,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,CAAC,EAChE,QAASG,EACP,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,CACnD,CACL,CACA,CAEA,SAASG,EAAeC,EAAO,CAC7B,MAAO,GAAGA,CAAK,GAAG,SAAS,EAAG,GAAG,CACnC"}